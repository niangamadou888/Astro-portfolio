import { Card } from "./ui/card";
import { Button } from "./ui/button";
import { ExternalLinkIcon, GithubIcon, GamepadIcon, GlobeIcon } from "lucide-react";
import { motion } from "framer-motion";
import { cn } from "@/lib/utils";
import { useState } from "react";
import { 
  FaReact, 
  FaNode, 
  FaJava, 
  FaAngular, 
  FaBootstrap, 
  FaGithub, 
  FaUnity,
  FaPython,
  FaDatabase
} from "react-icons/fa";
import { 
  SiTypescript, 
  SiTailwindcss, 
  SiVite, 
  SiExpress, 
  SiMongodb, 
  SiMysql, 
  SiPostgresql,
  SiSpringboot,
  SiSharp,
  SiDjango,
  SiShadcnui,
} from "react-icons/si";
import { IoLogoJavascript } from "react-icons/io5";
interface Project {
  title: string;
  description: string;
  image: string;
  tags: string[];
  liveUrl?: string;
  githubUrl?: string;
}

const getTechIcon = (tech: string) => {
  const iconProps = { className: "inline-block mr-1 text-lg" };
  const techMap: { [key: string]: JSX.Element } = {
    "React": <FaReact {...iconProps} className={cn(iconProps.className, "text-[#61DAFB]")} />,
    "TypeScript": <SiTypescript {...iconProps} className={cn(iconProps.className, "text-[#3178C6]")} />,
    "Tailwind CSS": <SiTailwindcss {...iconProps} className={cn(iconProps.className, "text-[#06B6D4]")} />,
    "Vite": <SiVite {...iconProps} className={cn(iconProps.className, "text-[#646CFF]")} />,
    "Node.js": <FaNode {...iconProps} className={cn(iconProps.className, "text-[#339933]")} />,
    "Express": <SiExpress {...iconProps} />,
    "MongoDB": <SiMongodb {...iconProps} className={cn(iconProps.className, "text-[#47A248]")} />,
    "Angular": <FaAngular {...iconProps} className={cn(iconProps.className, "text-[#DD0031]")} />,
    "Java": <FaJava {...iconProps} className={cn(iconProps.className, "text-[#007396]")} />,
    "SpringBoot": <SiSpringboot {...iconProps} className={cn(iconProps.className, "text-[#6DB33F]")} />,
    "MySQL": <SiMysql {...iconProps} className={cn(iconProps.className, "text-[#4479A1]")} />,
    "PostgreSQL": <SiPostgresql {...iconProps} className={cn(iconProps.className, "text-[#336791]")} />,
    "Bootstrap": <FaBootstrap {...iconProps} className={cn(iconProps.className, "text-[#7952B3]")} />,
    "Unity": <FaUnity {...iconProps} />,
    "C#": <SiSharp {...iconProps} className={cn(iconProps.className, "text-[#239120]")} />,
    "Django": <SiDjango {...iconProps} className={cn(iconProps.className, "text-[#092E20]")} />,
    "JavaScript": <IoLogoJavascript {...iconProps} className={cn(iconProps.className, "text-[#F7DF1E]")} />,
    "shadcn/ui": <SiShadcnui {...iconProps} className={cn(iconProps.className, "text-[#F7DF1E]")} />,
  };
  
  return techMap[tech] || null;
};

export const Projects = () => {
  const [activeTab, setActiveTab] = useState<"web" | "game">("web");

  const webProjects: Project[] = [
    {
      title: "Ytchap",
      description: "A platform that enhances YouTube video navigation by enabling creators to divide their content into chapters, making it easier for viewers to access specific sections.",
      image: "/ytchap.png",
      tags: ["Next js", "Javascript", "Google Gemini", "Nodejs", "Tailwind CSS"],
      liveUrl: "https://ytchap.com/",
      githubUrl: "https://github.com/niangamadou888/ytchap"
    },
    {
      title: "Free AI Detector",
      description: "A web tool that analyzes text patterns to determine whether content was written by a human or generated by AI, using advanced natural language processing.",
      image: "/freeaidetector.png",
      tags: ["JavaScript", "Express","Natural Language Processing (NLP)", "Node.js"],
      liveUrl: "http://free-ai-detector.com/",
      githubUrl: "https://github.com/niangamadou888/ai-detector"
    },
    {
      title: "TopSMM Reseller",
      description: "An SMM panel platform for managing and reselling social media marketing services, including likes, followers, and engagement across various platforms.",
      image: "/toppsmm.png",
      tags: ["Vite", "Bootstrap"],
      liveUrl: "https://topsmmreseller.vercel.app/",
      githubUrl: "https://github.com/ytlab23/topsmmreseller"
    },
    {
      title: "Budget App",
      description: "A React-based budget management application with local storage integration for tracking personal finances.",
      image: "/budgetapp.png",
      tags: ["React", "TypeScript", "Tailwind CSS"],
      liveUrl: "https://budget-app-niangamadou888.netlify.app/",
      githubUrl: "https://github.com/niangamadou888/Budget-app"
    },
    {
      title: "Mini Social Network",
      description: "A MERN stack social platform featuring user authentication, publication management, and an interactive dashboard.",
      image: "/mini-social-network.png",
      tags: ["MongoDB", "Express","React", "Node.js"],
      liveUrl: "https://mini-social-network.netlify.app",
      githubUrl: "https://github.com/niangamadou888/Mini-Social-Network"
    },
    {
      title: "School Management",
      description: "A secure web application for managing student enrollment and information in educational institutions.",
      image: "/SchoolManagement.png",
      tags: ["Angular", "Java", "SpringBoot", "MySQL"],
      githubUrl: "https://github.com/niangamadou888/school-management"
    },
    {
      title: "City Life",
      description: "A platform providing users with information about local services and activities in their city area.",
      image: "/CityLife.png",
      tags: ["Angular", "Django", "PostgreSQL"],
      githubUrl: "https://github.com/niangamadou888/City-Life"
    }
  ];

  const gameProjects: Project[] = [
    {
      title: "EN ROUTE VERS UNCHK",
      description: "A 3D mobile serious game that teaches players about Cheikh Hamidou Kane through interactive scenarios and integrates with a learning platform for progress tracking.",
      image: "/1.png",
      tags: ["Unity", "C#", "Game Design", "Internship", "Moodle Learning"],
    },
    {
      title: "ROI PION",
      description: "A two-player puzzle game developed during Game Hub's Game Jam, featuring original assets and Unity 3D implementation.",
      image: "/2.png",
      tags: ["Unity", "C#", "Game Design"],
    },
    {
      title: "SOKOBAN",
      description: "A challenging mobile puzzle game with multiple difficulty levels and a timer system, inspired by the classic Sokoban.",
      image: "/3.png",
      tags: ["Unity", "C#", "Game Design"]
    }
  ];

  const activeProjects = activeTab === "web" ? webProjects : gameProjects;

  return (
    <section id="projects" className="py-20 px-4 relative overflow-hidden">
      {/* Background decoration */}
      <div className="absolute inset-0 bg-[radial-gradient(ellipse_at_top_right,rgba(var(--primary-rgb),0.05),transparent_50%),radial-gradient(ellipse_at_bottom_left,rgba(147,51,234,0.05),transparent_50%)]" />
      <div className="absolute inset-0 bg-[linear-gradient(45deg,#80808008_1px,transparent_1px),linear-gradient(135deg,#80808008_1px,transparent_1px)] bg-[size:24px_24px]" />

      <div className="max-w-6xl mx-auto relative">
        <div className="flex items-center gap-3 mb-12">
          <div className="bg-primary/10 p-2.5 rounded-xl">
            <GlobeIcon className="w-6 h-6 text-primary" />
          </div>
          <h2 className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary to-primary/50">Projects</h2>
        </div>

        <div className="flex justify-center gap-4 mb-12">
          <Button
            variant={activeTab === "web" ? "default" : "ghost"}
            className={cn(
              "gap-2 px-6 py-2 rounded-full transition-all duration-300",
              activeTab === "web" ? "bg-primary text-primary-foreground shadow-lg shadow-primary/25" : "hover:bg-primary/10"
            )}
            onClick={() => setActiveTab("web")}
          >
            <GlobeIcon className="w-4 h-4" />
            Web Projects
          </Button>
          <Button
            variant={activeTab === "game" ? "default" : "ghost"}
            className={cn(
              "gap-2 px-6 py-2 rounded-full transition-all duration-300",
              activeTab === "game" ? "bg-primary text-primary-foreground shadow-lg shadow-primary/25" : "hover:bg-primary/10"
            )}
            onClick={() => setActiveTab("game")}
          >
            <GamepadIcon className="w-4 h-4" />
            Game Projects
          </Button>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {activeProjects.map((project, index) => (
            <motion.div
              key={project.title}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
            >
              <Card className="overflow-hidden group backdrop-blur-sm bg-background/30 border-primary/10 hover:shadow-xl hover:shadow-primary/5 transition-all duration-500">
                <div className="aspect-video relative overflow-hidden">
                  {project.image && (
                    <img
                      src={project.image}
                      alt={project.title}
                      className="object-cover w-full h-full transform group-hover:scale-105 transition-transform duration-500"
                    />
                  )}
                  <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end justify-end gap-4 p-4">
                    {project.liveUrl && (
                      <Button
                        size="icon"
                        variant="ghost"
                        className="h-9 w-9 rounded-full bg-white/10 backdrop-blur-sm hover:bg-white/20 transition-colors duration-300"
                        onClick={() => window.open(project.liveUrl, '_blank')}
                      >
                        <ExternalLinkIcon className="h-4 w-4 text-white" />
                      </Button>
                    )}
                    {project.githubUrl && (
                      <Button
                        size="icon"
                        variant="ghost"
                        className="h-9 w-9 rounded-full bg-white/10 backdrop-blur-sm hover:bg-white/20 transition-colors duration-300"
                        onClick={() => window.open(project.githubUrl, '_blank')}
                      >
                        <GithubIcon className="h-4 w-4 text-white" />
                      </Button>
                    )}
                  </div>
                </div>
                <div className="p-6 space-y-4">
                  <h3 className="text-lg font-semibold tracking-tight">{project.title}</h3>
                  <p className="text-muted-foreground">{project.description}</p>
                  <div className="flex flex-wrap gap-2 pt-2">
                    {project.tags.map((tag, tagIndex) => (
                      <span
                        key={tagIndex}
                        className="inline-flex items-center px-3 py-1 text-sm rounded-full bg-primary/5 text-primary/80 hover:bg-primary/10 transition-colors duration-300"
                      >
                        {getTechIcon(tag)}
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
              </Card>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};